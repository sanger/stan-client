# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test

on:
  push:
    branches: [devel]
  pull_request:
    branches: [devel]

jobs:
  cypress:
    name: Run cypress tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - name: Export node version
        id: node_version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: >-
         echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencides
        run: >-
          yarn install
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          install-command: yarn --frozen-lockfile --silent
          build: yarn build
          start: npx serve -s build -p 3000
          wait-on: "http://localhost:3000"
          config: baseUrl=http://localhost:3000
          timeout-minutes: 5

  prettier:
    name: Check format with prettier
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
        cache: 'yarn'
    - name: Install dependencides
        run: >-
          yarn install
    - name: Run prettier
      run: >-
        yarn prettier --check .
    
  eslint:
    name: Lint with ESLint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
        cache: 'yarn'
    - name: Install dependencides
        run: >-
          yarn install
    - name: Lint using ESLint
      run: >-
        yarn lint
